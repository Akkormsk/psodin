"""Initial migration

Revision ID: ba318fbbecc3
Revises: 
Create Date: 2024-07-26 21:30:18.087077

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'ba318fbbecc3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Drop existing tables if they exist
    op.execute("DROP TABLE IF EXISTS embossing")
    op.execute("DROP TABLE IF EXISTS orders")
    op.execute("DROP TABLE IF EXISTS paper_type")
    op.execute("DROP TABLE IF EXISTS paper_type_large")
    op.execute("DROP TABLE IF EXISTS post_print_processing")
    op.execute("DROP TABLE IF EXISTS post_print_processing_large")
    op.execute("DROP TABLE IF EXISTS print_type")
    op.execute("DROP TABLE IF EXISTS print_type_large")
    op.execute("DROP TABLE IF EXISTS variables")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('embossing',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('retail_price', sa.Float(), nullable=False),
    sa.Column('cost_price', sa.Float(), nullable=False),
    sa.Column('materials', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paper_type',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paper_type_large',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_print_processing',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_print_processing_large',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('print_type',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit_xerox', sa.Float(), nullable=False),
    sa.Column('price_per_unit_konica', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('print_type_large',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_per_unit_canon', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('variables',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('variables')
    op.drop_table('print_type_large')
    op.drop_table('print_type')
    op.drop_table('post_print_processing_large')
    op.drop_table('post_print_processing')
    op.drop_table('paper_type_large')
    op.drop_table('paper_type')
    op.drop_table('orders')
    op.drop_table('embossing')
    # ### end Alembic commands ###
